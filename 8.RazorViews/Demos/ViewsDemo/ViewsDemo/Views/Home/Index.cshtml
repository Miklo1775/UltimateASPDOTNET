@using ViewsDemo.Models;
@model IEnumerable<Person>

@{
    // List<Person>? persons = (List<Person>?)ViewData["people"];
    //ONE BENEFIT OF VIEWBAG IS THAT IT READS THE DATA FROM VIEWDATA AND THAT YOU CAN ACCESS THAT DATA WITHOUT TYPECASTING.
    List<Person> persons = ViewBag.people;
    // string appTitle = "Views Demo";
    // string heading = "Views Example";
    // Person person = new Person() { Name = "Chichi", DateOfBirth = null, PersonGender = Gender.Female};
    // List<Person> persons = new List<Person>()
    // {
    //     new Person(){Name = "Squishy", DateOfBirth = DateTime.Parse("2023-01-01"), PersonGender = Gender.Female},
    //     new Person() {Name = "Chichi", DateOfBirth = DateTime.Parse("2021-04-01"), PersonGender = Gender.Female},
    //     new Person(){Name = "Sylvestre", DateOfBirth = DateTime.Parse("2022-11-01"), PersonGender = Gender.Male},
    //     new Person() { Name = "Kinto", DateOfBirth = null, PersonGender = Gender.Male}
    // };
}

@{
    //WHEN USING @functions, THE FUNCTION IS CONVERTED TO A METHOD. WE CAN THEN ADD FIELD AND PROPERTIES. BEHIND THE SCENES, THESE ARE TURNED INTO A CLASS.
    //@functions is apparently less used in the real world because Views should contain very minimal C# code.
}

@{

    // double? GetAge(DateTime? dateOfBirth)
    // {
    //     if (dateOfBirth is not null)
    //     {
    //         return System.Math.Round((DateTime.Now - dateOfBirth.Value).TotalDays / 365.25);
    //     }
    //
    //     return null;
    // }

    string alertMessage = $"<script>alert('{persons.Count} people found in collection')</script>";
}

@{
    //Local Function
    double? GetAgeLocal(DateTime? dateOfBirth)
    {
        if (dateOfBirth is not null)
        {
            return System.Math.Round((DateTime.Now - dateOfBirth.Value).TotalDays / 365.25);
        }

        return null;
    }
}

<!DOCTYPE html>
<html lang="">
    <head>
        @* <title>@appTitle</title> *@
        <title>@ViewData["appTitle"]</title>
        <meta charset="utf-8" />
        <link href="~/StyleSheet.css" rel="stylesheet"/>
    </head>
<body>
@* @Html.Raw(alertMessage) *@
<div class="page-content">
    <h1>Welcome to the View Demo</h1>
    @* <h1>Welcome, @person.Name</h1> *@

    @* // RAZOR - IF/ELSE     *@
    @* @if (person.DateOfBirth.HasValue) *@
    @*  { *@
    @*      <h2>Your birthday is @person.DateOfBirth</h2> *@
    @*      double age = Math.Round((DateTime.Now - person.DateOfBirth).Value.TotalDays / 365.25); *@
    @*      <h2>You are @age years old!</h2> *@
    @*  } *@
    @* else *@
    @* { *@
    @*     <h1>You should consider adding your birthday!</h1> *@
    @* } *@
    @* *@
    @* $1$ //RAZOR - SWITCH/CASE #1# *@
    @* @switch (person.PersonGender) *@
    @* { *@
    @*     case Gender.Male: *@
    @*         <p>Gender: Male</p> *@
    @*         ; *@
    @*         break; *@
    @*          *@
    @*     case Gender.Female: *@
    @*         <p>Gender: Female</p> *@
    @*         ; *@
    @*         break; *@
    @*          *@
    @*     case Gender.Other: *@
    @*         <p>Gender: Other</p> *@
    @*         ; *@
    @*         break; *@
    @* } *@
    @* @foreach (Person person in persons) *@
    @* { *@
    @*     <div>@person.Name *@
    @*         @if (person.DateOfBirth != null) *@
    @*         { *@
    @*             <span>@person.DateOfBirth</span> *@
    @*         } *@
    @*         else *@
    @*         { *@
    @*             <span>Date of Birth: Unknown</span> *@
    @*         } *@
    @*          *@
    @*     </div> *@
    @* } *@

    @* @foreach (Person person in persons) *@
    @* { *@
    
    @* SINCE NOW WE ARE USING A STRONGLY TYPED VIEW, WE CAN GRAB THE DATA FROM THE MODEL OBJECT *@
    @foreach(Person person in Model)
    {
    @* <text>Hello, </text> *@
        <div class="box float-left w-50">
            <h3>@person.Name</h3>
            <table class="table w-100">
                <tbody>
                <tr>
                    <td>Gender</td>
                    <td>@person.PersonGender</td>
                </tr>
                <tr>
                    <td>Date of Birth</td>
                    @if (person.DateOfBirth.HasValue)
                    {
                        <td>@person.DateOfBirth.Value.ToString("MM/dd/yyyy")</td>
                    }
                    else
                    {
                        <td>Age Unknown</td>
                    }
                </tr>
                </tbody>
            </table>
            <a href="/person-details/@person.Name">Details</a>
            @* @if (person.DateOfBirth != null) *@
            @* { *@
            @*     <span>Date of Birth: @person.DateOfBirth.Value.ToString("MM/dd/yyyy")</span> *@
            @*     <span>@GetAgeLocal(person.DateOfBirth) years old</span> *@
            @* } *@
        </div>

    }
</div>
</body>
</html>